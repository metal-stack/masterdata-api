syntax = "proto3";

package v1;

import "google/protobuf/timestamp.proto";
import "google/type/postal_address.proto";
import "v1/common.proto";
import "v1/iam.proto";
import "v1/meta.proto";
import "v1/project.proto";
import "v1/quota.proto";

service TenantService {
  rpc Create(TenantCreateRequest) returns (TenantResponse);
  rpc Update(TenantUpdateRequest) returns (TenantResponse);
  rpc Delete(TenantDeleteRequest) returns (TenantResponse);
  rpc Get(TenantGetRequest) returns (TenantResponse);
  rpc GetHistory(TenantGetHistoryRequest) returns (TenantResponse);
  rpc Find(TenantFindRequest) returns (TenantListResponse);
  rpc ListTenantMembers(ListTenantMembersRequest) returns (ListTenantMembersResponse);
  rpc FindParticipatingProjects(FindParticipatingProjectsRequest) returns (FindParticipatingProjectsResponse);
  rpc FindParticipatingTenants(FindParticipatingTenantsRequest) returns (FindParticipatingTenantsResponse);
}

message FindParticipatingProjectsRequest {
  string tenant_id = 1;
  optional bool include_inherited = 2;
}

message FindParticipatingTenantsRequest {
  string tenant_id = 1;
  optional bool include_inherited = 2;
}

message ListTenantMembersRequest {
  string tenant_id = 1;
  optional bool include_inherited = 2;
}

message ListTenantMembersResponse {
  repeated TenantWithMembershipAnnotations tenants = 1;
}

message FindParticipatingProjectsResponse {
  repeated ProjectWithMembershipAnnotations projects = 1;
}

message FindParticipatingTenantsResponse {
  repeated TenantWithMembershipAnnotations tenants = 1;
}

message ProjectWithMembershipAnnotations {
  Project project = 1;
  map<string, string> project_annotations = 2;
  map<string, string> tenant_annotations = 3;
}

message TenantWithMembershipAnnotations {
  Tenant tenant = 1;
  map<string, string> project_annotations = 2;
  map<string, string> tenant_annotations = 3;
  // ProjectIDs contains all project IDs of this tenant for which an explicit project membership exists
  repeated string project_ids = 4;
}

message Tenant {
  Meta meta = 1;
  string name = 2;
  string description = 3;
  QuotaSet default_quotas = 4;
  QuotaSet quotas = 5;
  IAMConfig iam_config = 6;
  PaymentDetails payment = 7;
  ContactDetails contact_details = 8;
}

message TenantCreateRequest {
  Tenant tenant = 1;
}

message TenantUpdateRequest {
  Tenant tenant = 1;
}

message TenantDeleteRequest {
  string id = 1;
}

message TenantGetRequest {
  string id = 1;
}

message TenantGetHistoryRequest {
  string id = 1;
  google.protobuf.Timestamp at = 2;
}

message TenantFindRequest {
  reserved 1, 2;
  reserved "deprecated_id", "deprecated_name";

  Paging paging = 3;
  map<string, string> annotations = 4;

  optional string id = 5;
  optional string name = 6;
}

message TenantResponse {
  Tenant tenant = 1;
}

message TenantListResponse {
  repeated Tenant tenants = 1;
  // next_page is used for pagination, returns the next page to be fetched and must then be provided in the list request.
  optional uint64 next_page = 2;
}

// PaymentDetails describe payment specific configurations of a tenant
message PaymentDetails {
  // Details stored as key value pairs
  map<string, string> details = 1;
  // Annotations of this payment details
  map<string, string> annotations = 2;
  // Labels of this payment details
  repeated string labels = 3;
}

// ContactDetails contain more properties of a tenant
message ContactDetails {
  // Email of this tenant
  string email = 1;
  // Phone Number of this tenant
  string phone_number = 2;
  // Address of this tenant
  google.type.PostalAddress address = 3;
  string avatar_url = 4;
  // Annotations of this payment details
  map<string, string> annotations = 5;
  // Labels of this payment details
  repeated string labels = 6;
}
