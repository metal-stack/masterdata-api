syntax = "proto3";

package v1;

import "v1/meta.proto";

service TenantMemberService {
  rpc Create(TenantMemberCreateRequest) returns (TenantMemberResponse);
  rpc Update(TenantMemberUpdateRequest) returns (TenantMemberResponse);
  rpc Delete(TenantMemberDeleteRequest) returns (TenantMemberResponse);
  rpc Get(TenantMemberGetRequest) returns (TenantMemberResponse);
  rpc Find(TenantMemberFindRequest) returns (TenantMemberListResponse);
}

// TenantMember is the database model
message TenantMember {
  Meta meta = 1;
  // TenantId is the id of the parent tenant
  string tenant_id = 2;
  // MemberId is the id of the member tenant
  string member_id = 3;
  // Namespace introduces the possibility to associate memberships for different applications that use the masterdata-api as a backend.
  string namespace = 4;
}

message TenantMemberCreateRequest {
  TenantMember tenant_member = 1;
}

message TenantMemberUpdateRequest {
  TenantMember tenant_member = 1;
}

message TenantMemberDeleteRequest {
  string id = 1;
}

message TenantMemberGetRequest {
  string id = 1;
}

message TenantMemberFindRequest {
  optional string tenant_id = 1;
  optional string member_id = 2;
  map<string, string> annotations = 6;
  string namespace = 7;
}

message TenantMemberResponse {
  TenantMember tenant_member = 1;
}

message TenantMemberListResponse {
  repeated TenantMember tenant_members = 1;
}
