// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockUnsafeVersionServiceServer creates a new instance of MockUnsafeVersionServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUnsafeVersionServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUnsafeVersionServiceServer {
	mock := &MockUnsafeVersionServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockUnsafeVersionServiceServer is an autogenerated mock type for the UnsafeVersionServiceServer type
type MockUnsafeVersionServiceServer struct {
	mock.Mock
}

type MockUnsafeVersionServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeVersionServiceServer) EXPECT() *MockUnsafeVersionServiceServer_Expecter {
	return &MockUnsafeVersionServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedVersionServiceServer provides a mock function for the type MockUnsafeVersionServiceServer
func (_mock *MockUnsafeVersionServiceServer) mustEmbedUnimplementedVersionServiceServer() {
	_mock.Called()
	return
}

// MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedVersionServiceServer'
type MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedVersionServiceServer is a helper method to define mock.On call
func (_e *MockUnsafeVersionServiceServer_Expecter) mustEmbedUnimplementedVersionServiceServer() *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call {
	return &MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedVersionServiceServer")}
}

func (_c *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call) Run(run func()) *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call) Return() *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call) RunAndReturn(run func()) *MockUnsafeVersionServiceServer_mustEmbedUnimplementedVersionServiceServer_Call {
	_c.Run(run)
	return _c
}
