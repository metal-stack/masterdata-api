// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockUnsafeTenantServiceServer creates a new instance of MockUnsafeTenantServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUnsafeTenantServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUnsafeTenantServiceServer {
	mock := &MockUnsafeTenantServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockUnsafeTenantServiceServer is an autogenerated mock type for the UnsafeTenantServiceServer type
type MockUnsafeTenantServiceServer struct {
	mock.Mock
}

type MockUnsafeTenantServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeTenantServiceServer) EXPECT() *MockUnsafeTenantServiceServer_Expecter {
	return &MockUnsafeTenantServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedTenantServiceServer provides a mock function for the type MockUnsafeTenantServiceServer
func (_mock *MockUnsafeTenantServiceServer) mustEmbedUnimplementedTenantServiceServer() {
	_mock.Called()
	return
}

// MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedTenantServiceServer'
type MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedTenantServiceServer is a helper method to define mock.On call
func (_e *MockUnsafeTenantServiceServer_Expecter) mustEmbedUnimplementedTenantServiceServer() *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call {
	return &MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedTenantServiceServer")}
}

func (_c *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call) Run(run func()) *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call) Return() *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call) RunAndReturn(run func()) *MockUnsafeTenantServiceServer_mustEmbedUnimplementedTenantServiceServer_Call {
	_c.Run(run)
	return _c
}
