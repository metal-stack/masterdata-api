// This file was automatically generated by pkg/gen/genscanvaluer.
// DO NOT EDIT MANUALLY.
// Regenerate with "go generate" or "make generate"

package apiv1

import (
	"database/sql/driver"
	"fmt"
)

func (p *ProjectMember) Schema() string {
	return `
	CREATE TABLE IF NOT EXISTS projectmembers (
		id   text PRIMARY KEY NOT NULL,
		projectmember JSONB NOT NULL
	);
	CREATE INDEX IF NOT EXISTS projectmember_idx ON projectmembers USING GIN(projectmember);

	CREATE TABLE IF NOT EXISTS projectmembers_history (
		id         text NOT NULL,
		op         char NOT NULL,
		created_at timestamptz NOT NULL,
		projectmember JSONB NOT NULL
	);
	CREATE INDEX IF NOT EXISTS projectmembers_history_id_created_at_idx ON projectmembers_history USING btree(id, created_at);
`
}

func (p *ProjectMember) JSONField() string {
	return "projectmember"
}

func (p *ProjectMember) TableName() string {
	return "projectmembers"
}

func (p *ProjectMember) Kind() string {
	return "ProjectMember"
}

func (p *ProjectMember) APIVersion() string {
	return "v1"
}

// Value make the ProjectMember struct implement the driver.Valuer interface. This method
// simply returns the JSON-encoded representation of the struct.
func (p *ProjectMember) Value() (driver.Value, error) {
	return json.Marshal(p)
}

// Scan make the ProjectMember struct implement the sql.Scanner interface. This method
// simply decodes a JSON-encoded value into the struct fields.
func (p *ProjectMember) Scan(value any) error {
	b, ok := value.([]byte)
	if !ok {
		return fmt.Errorf("type assertion to []byte failed")
	}

	err := json.Unmarshal(b, p)
	return err
}
